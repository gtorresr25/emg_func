<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="eWE+K[_Y0m8MF^+-81)-">window_size</variable><variable id="Yd0D)n#w!EaCP(oTRuaf">index</variable><variable id="):K4#:v6?Dik0pT2-5H8">EMG_code</variable><variable id="weK=yjmX[e7m={arWR0e">list</variable></variables><comment id="PGJ9EG[m3s78:GmofTY1" minimized="true" data="0" x="0" y="0" h="120" w="480">Use this file to define custom functions and blocks.
Read more at https://makecode.microbit.org/blocks/custom</comment><block type="pxt-on-start" id="+9vHq1`L@O,x=mxIg5}z" x="10" y="10"><statement name="HANDLER"><block type="typescript_statement" id="ZH;[Y|p;n@5d3xVDn-MO" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let EMG_code = 0" numlines="1" declaredvars="EMG_code"></mutation><next><block type="typescript_statement" id="OT-B7QKWn^0x(-6I@T?]" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let list: number[] = []" numlines="1" declaredvars="list"></mutation><next><block type="typescript_statement" id="T|e1o,!mPwCkjWF7$-9X" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let sum = 0" numlines="1" declaredvars="sum"></mutation><next><block type="typescript_statement" id="-f0p[f$q`6u=QK!@5zdF" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let ave = 0" numlines="1" declaredvars="ave"></mutation><next><block type="variables_set" id="j1CVeK27Yc/!$ink5-rJ"><field name="VAR" id="eWE+K[_Y0m8MF^+-81)-">window_size</field><value name="VALUE"><shadow type="math_number" id="EYGC]~iyFosRN9BBPuX{"><field name="NUM">15</field></shadow></value><next><block type="pxt_controls_for" id="k5AvrodazcR_LFsG=$c/"><comment pinned="false" h="80" w="160">Change the EMG name to EMG_code so student's variable will not have conflict</comment><value name="VAR"><shadow type="variables_get_reporter" id="Ptwv/(f[Arx.!NL8yjZV"><field name="VAR" id="Yd0D)n#w!EaCP(oTRuaf">index</field></shadow></value><value name="TO"><shadow type="math_whole_number"><field name="NUM">0</field></shadow><block type="variables_get" id="rzuFxSW=F2jaiY}jKiS:"><field name="VAR" id="eWE+K[_Y0m8MF^+-81)-">window_size</field></block></value><statement name="DO"><block type="variables_set" id="s%RRH|[4/5pe/ak`j4@c"><field name="VAR" id="):K4#:v6?Dik0pT2-5H8">EMG_code</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="device_get_analog_pin" id="f=b4FeMM8x9IH%zp7St*"><field name="name">AnalogPin.P3</field></block></value><next><block type="array_push" id="S!5XtX3o5YHeJ7|AIKjc"><comment pinned="false" h="80" w="160">list.push(0)</comment><value name="list"><block type="variables_get" id="prA$f.$[)^hGlI1EUka7"><field name="VAR" id="weK=yjmX[e7m={arWR0e">list</field></block></value><value name="value"><block type="variables_get" id="_,`uPG,u=dnHjiy)aQDE"><field name="VAR" id="):K4#:v6?Dik0pT2-5H8">EMG_code</field></block></value></block></next></block></statement><next><block type="typescript_statement" id="++P+*(~BYU.#xHKC5IIb" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace custom {" line1="    /**" line2="     * Use dynamic average window to filter EMG signal from Pin P3" line3="     */" line4="    //% block=&quot;EMG_filtered in the windows size %window_size by pin %pin_name&quot;" line5="    export function EmgFilter(pin_name: AnalogPin): number {" line6="        // Add code here" line7="        EMG_code = pins.analogReadPin(pin_name)" line8="        list.unshift(EMG_code)" line9="        list.removeAt(window_size)" line10="        sum = 0" line11="        for (let index2 = 0; index2 &lt;= window_size; index2++) {" line12="            sum = sum + list[index2]" line13="        }" line14="        ave = sum / window_size" line15="        return ave" line16="    }" line17="" line18="    /**" line19="     * Address motor rotation direction and speed by acceleration" line20="     */" line21="    //% block=&quot;set P0 servo rotates in the direction %direction by %speed (ms) interval&quot;" line22="" line23="}" numlines="24"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>