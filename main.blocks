<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="7U!uZwsC8HN#SMXouQv0">window_size</variable><variable id="z1o-_)@PKnHf?Bo-9h_t">index</variable><variable id="RM]JehHXbK}mC,vai%jl">EMG_code</variable><variable id=";*4-outwD.KWD)@*{Tu]">list</variable></variables><comment id="T!G|}`zW_];tb,d-Bg[J" minimized="true" data="0" x="0" y="0" h="120" w="480">Use this file to define custom functions and blocks.

Read more at https://makecode.microbit.org/blocks/custom</comment><block type="pxt-on-start" id="*B]_rQP39GaSO5f/Lh*z" x="10" y="10"><statement name="HANDLER"><block type="typescript_statement" id="7iH4lY-gH/$xNDiXolzm" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let ave = 0" numlines="1" declaredvars="ave"></mutation><next><block type="typescript_statement" id="WLFgWVJBIz2g=jGv2MYy" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let sum = 0" numlines="1" declaredvars="sum"></mutation><next><block type="typescript_statement" id="XN%1n]kLo=h~6i8}BxHf" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let list: number[] = []" numlines="1" declaredvars="list"></mutation><next><block type="typescript_statement" id="l~}YX}vxbP|!WF|3KIpK" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let EMG_code = 0" numlines="1" declaredvars="EMG_code"></mutation><next><block type="variables_set" id=")YmZNnlB~)=19+:)dyD2"><field name="VAR" id="7U!uZwsC8HN#SMXouQv0">window_size</field><value name="VALUE"><shadow type="math_number" id="[/As-^!m1dlsIcM=hmzN"><field name="NUM">15</field></shadow></value><next><block type="pxt_controls_for" id="pD5iY)XoBR@2.NR9eEH("><comment pinned="false" h="80" w="160">Change the EMG name to EMG_code so student's variable will not have conflict</comment><value name="VAR"><shadow type="variables_get_reporter" id="=uSgavYwc-q]Da(6lX9~"><field name="VAR" id="z1o-_)@PKnHf?Bo-9h_t">index</field></shadow></value><value name="TO"><shadow type="math_whole_number"><field name="NUM">0</field></shadow><block type="variables_get" id="w5)_8NXDNz?9/z{p7C)p"><field name="VAR" id="7U!uZwsC8HN#SMXouQv0">window_size</field></block></value><statement name="DO"><block type="variables_set" id="f]c:X2z%Se:;_yaR@S=T"><field name="VAR" id="RM]JehHXbK}mC,vai%jl">EMG_code</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="device_get_analog_pin" id="B[YVw~8D]u`|zB#W/%I2"><field name="name">AnalogPin.P3</field></block></value><next><block type="array_push" id="/S16WFdQ3l=$(3m07qQ7"><comment pinned="false" h="80" w="160">list.push(0)</comment><value name="list"><block type="variables_get" id="TPP0xL0.PpfszYGT$4y_"><field name="VAR" id=";*4-outwD.KWD)@*{Tu]">list</field></block></value><value name="value"><block type="variables_get" id="oFRoF.SD;,lL2c2IK(0("><field name="VAR" id="RM]JehHXbK}mC,vai%jl">EMG_code</field></block></value></block></next></block></statement><next><block type="typescript_statement" id="aSK0z~jbKWc8zdsM@aQl" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace custom {" line1="    /**" line2="     * Use dynamic average window to filter EMG signal from Pin P3" line3="     */" line4="    //% block=&quot;EMG_filtered in the windows size %window_size by pin %pin_name&quot;" line5="    export function EmgFilter(pin_name: AnalogPin): number {" line6="        // Add code here" line7="        EMG_code = pins.analogReadPin(pin_name)" line8="        list.unshift(EMG_code)" line9="        list.removeAt(window_size)" line10="        sum = 0" line11="        for (let index2 = 0; index2 &lt;= window_size; index2++) {" line12="            sum = sum + list[index2]" line13="        }" line14="        ave = sum / window_size" line15="        return ave" line16="    }" line17="}" numlines="18"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>