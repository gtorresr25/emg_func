<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="Tw/-jO~/eC/JiFPl~KA-">winsize</variable><variable id="Y99Qsx$X0R.-pV4Z2QUt">index</variable><variable id="0|vXR?]~S)eRQ@(Pu%n%">EMG</variable><variable id="-l.dZrkY:K6JjMuM}vJt">list</variable></variables><comment id="L8C|7$9HfCN0cV9Gj28D" minimized="true" data="0" x="0" y="0" h="120" w="480">Use this file to define custom functions and blocks.

Read more at https://makecode.microbit.org/blocks/custom</comment><block type="pxt-on-start" id=":lRHf3uPP|,=ftH^-qRD" x="10" y="10"><statement name="HANDLER"><block type="typescript_statement" id=":U(4Pzjl~3,WYuPAfVMP" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let ave = 0" numlines="1" declaredvars="ave"></mutation><next><block type="typescript_statement" id="8#sYzH~d$+6v`tR$ZX,}" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let sum = 0" numlines="1" declaredvars="sum"></mutation><next><block type="typescript_statement" id="X0}q(e/Hz8kf-,V!K4nG" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let list: number[] = []" numlines="1" declaredvars="list"></mutation><next><block type="typescript_statement" id="e|y-wJ4C[*8?q(Tu?I)^" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let EMG = 0" numlines="1" declaredvars="EMG"></mutation><next><block type="variables_set" id="z#,=pj}gsZLQm?k^KMyy"><field name="VAR" id="Tw/-jO~/eC/JiFPl~KA-">winsize</field><value name="VALUE"><shadow type="math_number" id="jTt~3GJ+X9XoBJ]Sm}[4"><field name="NUM">2</field></shadow></value><next><block type="pxt_controls_for" id="+8f`z9eOezb4JUR23x:z"><value name="VAR"><shadow type="variables_get_reporter" id=":zxuEL+}.K]jGWe|$j#~"><field name="VAR" id="Y99Qsx$X0R.-pV4Z2QUt">index</field></shadow></value><value name="TO"><shadow type="math_whole_number"><field name="NUM">0</field></shadow><block type="variables_get" id="~;4)QDYpE:U56o;S0U0}"><field name="VAR" id="Tw/-jO~/eC/JiFPl~KA-">winsize</field></block></value><statement name="DO"><block type="variables_set" id="$PKa5ca(~S@%4h.nzNHH"><field name="VAR" id="0|vXR?]~S)eRQ@(Pu%n%">EMG</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="device_get_analog_pin" id="JlANj{1TChMc2gs/-W`C"><field name="name">AnalogPin.P3</field></block></value><next><block type="array_push" id="{O--E@xHS%5Mbeu=D1ac"><value name="list"><block type="variables_get" id="E-Wio!sD?J@7Cj()Lz}w"><field name="VAR" id="-l.dZrkY:K6JjMuM}vJt">list</field></block></value><value name="value"><block type="variables_get" id="NMxnM:7u-ng$^BrfDrYH"><field name="VAR" id="0|vXR?]~S)eRQ@(Pu%n%">EMG</field></block></value></block></next></block></statement><next><block type="typescript_statement" id="+P5Ov)!EQBjl]$B?Nn@2" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace custom2 {" line1="    /**" line2="     * Use dynamic average window to filter EMG signal from Pin P3" line3="     */" line4="    //% block=&quot;EMG_filtered&quot;" line5="    export function EmgFilter(): number {" line6="        // Add code here" line7="        EMG = pins.analogReadPin(AnalogPin.P3)" line8="        list.unshift(EMG)" line9="        list.removeAt(winsize)" line10="        sum = 0" line11="        for (let index2 = 0; index2 &lt;= winsize; index2++) {" line12="            sum = sum + list[index2]" line13="        }" line14="        ave = sum / winsize" line15="        return ave" line16="    }" line17="}" numlines="18"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>